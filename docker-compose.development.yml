# Production-Grade Development Environment
# Complete containerized workflow modeling production architecture
# Author: Hive Mind Orchestrator
# Created: 2025-08-29

version: '3.8'

networks:
  soberlivings:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  grafana_data:
  prometheus_data:

services:
  # =============================================================================
  # CORE APPLICATION SERVICES
  # =============================================================================
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
      args:
        - NODE_ENV=development
    container_name: soberlivings_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229"  # Node debugger
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/soberlivings
      REDIS_URL: redis://redis:6379
      NEXT_PUBLIC_API_URL: http://localhost:3000/api
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ENABLE_HOT_RELOAD: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      soberlivings:
        ipv4_address: 172.25.0.10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  
  postgres:
    image: postgis/postgis:15-3.3
    container_name: soberlivings_postgres_dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: soberlivings
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./frontend/database/migrations:/docker-entrypoint-initdb.d:ro
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/00-init.sh:ro
    networks:
      soberlivings:
        ipv4_address: 172.25.0.20
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: soberlivings_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      soberlivings:
        ipv4_address: 172.25.0.21
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: soberlivings_elasticsearch_dev
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      soberlivings:
        ipv4_address: 172.25.0.22
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # MONITORING & OBSERVABILITY
  # =============================================================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: soberlivings_prometheus_dev
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      soberlivings:
        ipv4_address: 172.25.0.30
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana:latest
    container_name: soberlivings_grafana_dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    depends_on:
      - prometheus
    networks:
      soberlivings:
        ipv4_address: 172.25.0.31
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # DEVELOPMENT TOOLS
  # =============================================================================
  
  adminer:
    image: adminer:latest
    container_name: soberlivings_adminer_dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      soberlivings:
        ipv4_address: 172.25.0.40
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mailhog:
    image: mailhog/mailhog:latest
    container_name: soberlivings_mailhog_dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      soberlivings:
        ipv4_address: 172.25.0.41
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # NGINX REVERSE PROXY (Production-like)
  # =============================================================================
  
  nginx:
    image: nginx:alpine
    container_name: soberlivings_nginx_dev
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    networks:
      soberlivings:
        ipv4_address: 172.25.0.50
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"