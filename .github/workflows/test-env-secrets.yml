name: Test Environment Secrets

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Test JWT_SECRET
        run: |
          if [ -n "$JWT_SECRET" ]; then
            echo "‚úÖ JWT_SECRET is accessible (length: ${#JWT_SECRET} characters)"
          else
            echo "‚ùå JWT_SECRET is not accessible"
            exit 1
          fi
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          
      - name: Test DATABASE_URL
        run: |
          if [ -n "$DATABASE_URL" ]; then
            echo "‚úÖ DATABASE_URL is accessible"
            echo "URL preview: $(echo "$DATABASE_URL" | sed 's/:[^@]*@/:***@/')"
          else
            echo "‚ùå DATABASE_URL is not accessible"
            exit 1
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Test SUPABASE_ACCESS_TOKEN
        run: |
          if [ -n "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "‚úÖ SUPABASE_ACCESS_TOKEN is accessible (starts with: ${SUPABASE_ACCESS_TOKEN:0:8}...)"
          else
            echo "‚ùå SUPABASE_ACCESS_TOKEN is not accessible"
          fi
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Test environment context
        run: |
          echo "üéØ Environment: ${{ github.event.inputs.environment }}"
          echo "üè∑Ô∏è Environment name in job: $ENVIRONMENT"
          echo "üîç All environment variables starting with GITHUB_:"
          env | grep ^GITHUB_ | head -5
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          
      - name: Deployment simulation
        run: |
          echo "üöÄ Simulating deployment to ${{ github.event.inputs.environment }}"
          echo "Using JWT_SECRET: ${JWT_SECRET:0:8}...${JWT_SECRET: -4}"
          echo "Database configured: $([ -n "$DATABASE_URL" ] && echo "‚úÖ Yes" || echo "‚ùå No")"
          echo "Supabase configured: $([ -n "$SUPABASE_ACCESS_TOKEN" ] && echo "‚úÖ Yes" || echo "‚ùå No")"
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}